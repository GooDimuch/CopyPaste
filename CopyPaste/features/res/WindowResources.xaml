<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <FontFamily x:Key="MainFont">Pescadero</FontFamily>
    <FontFamily x:Key="ItalicFont">Calibri</FontFamily>
    <system:Double x:Key="FontSizeNormal">16</system:Double>
    <system:Double x:Key="FontSizeMain">28</system:Double>
    <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />
    <SolidColorBrush x:Key="WhiteBrush" Color="#aaffffff" />
    <SolidColorBrush x:Key="GrayBrush" Color="DimGray" />
    <SolidColorBrush x:Key="LightGrayBrush" Color="#ffdddddd" />
    <SolidColorBrush x:Key="BlackBrush" Color="Black" />
    <!--Font-->
    <SolidColorBrush x:Key="FontBrush" Color="#29292f" />
    <SolidColorBrush x:Key="HintBrush" Color="DimGray" />
    <SolidColorBrush x:Key="ErrorFontBrush" Color="Red" />
    <SolidColorBrush x:Key="GoodFontBrush" Color="Green" />
    <SolidColorBrush x:Key="NormFontBrush" Color="DarkOrange" />
    <SolidColorBrush x:Key="BadFontBrush" Color="Red" />
    <!--111-->
    <SolidColorBrush x:Key="BorderBrush" Color="#29292f" />
    <SolidColorBrush x:Key="HeaderBrush" Color="#29292f" />
    <SolidColorBrush x:Key="OnHoverBrush" Color="#ffffffff" />
    <SolidColorBrush x:Key="OnHoverBorderBrush" Color="DimGray" />

    <!--стиль для CloseButton-->
    <Style x:Key="BCloseWindow" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Stretch="Uniform">
                        <Image.Resources>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="images/close.png" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="images/close_hover.png" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Resources>
                    </Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--стиль для MaximizeButton-->
    <Style x:Key="BMaximizeWindow" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Stretch="Uniform">
                        <Image.Resources>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="images/maximize.png" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="images/maximize_hover.png" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Resources>
                    </Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--стиль для NormalizeButton-->
    <Style x:Key="BNormalizeWindow" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Stretch="Uniform">
                        <Image.Resources>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="images/normalize.png" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="images/normalize_hover.png" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Resources>
                    </Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--стиль для MinimizeButton-->
    <Style x:Key="BMinimizeWindow" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Stretch="Uniform">
                        <Image.Resources>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="images/minimize.png" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="images/minimize_hover.png" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Resources>
                    </Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--стиль для SettingsButton-->
    <Style x:Key="BSettings" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Stretch="Uniform">
                        <Image.Resources>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="images/settings.png" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="images/settings_hover.png" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Resources>
                    </Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--стиль для ArrowBackButton-->
    <Style x:Key="BArrowBack" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Stretch="Uniform">
                        <Image.Resources>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="images/arrow_back.png" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="images/arrow_back_hover.png" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Resources>
                    </Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--стиль для TextBlock-->
    <Style x:Key="NormalTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}" />
        <Setter Property="Foreground" Value="{StaticResource FontBrush}" />
    </Style>

    <!--стиль для TextBox-->
    <Style x:Key="NormalTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}" />
        <Setter Property="Foreground" Value="{StaticResource FontBrush}" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <!--стиль для PasswordBox-->
    <Style x:Key="NormalPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}" />
        <Setter Property="Foreground" Value="{StaticResource FontBrush}" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <!--стиль для Button-->
    <Style x:Key="NormalButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <!--стиль для ImageButton-->
    <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--стиль для DataGridRow-->
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
    <Style x:Key="NormalDataGridRow" TargetType="DataGridRow">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource OnHoverBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                <Setter Property="BorderThickness" Value="0,1,0,1" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="IsSelected" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{StaticResource OnHoverBorderBrush}" />
                <Setter Property="BorderThickness" Value="0,1,0,1" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridCell">
        <Setter Property="FontFamily" Value="{StaticResource MainFont}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource FontBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--стиль для Combobox-->
    <ImageBrush x:Key="ArrowDown" ImageSource="images/arrow_down.png" Stretch="Uniform" />

    <Style x:Key="NormalComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="5, 0, 5, 0" />

    </Style>

    <Style x:Key="NormalComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />

    </Style>

</ResourceDictionary>